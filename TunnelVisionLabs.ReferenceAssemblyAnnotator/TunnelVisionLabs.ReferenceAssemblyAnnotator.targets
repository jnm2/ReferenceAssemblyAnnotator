<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="TunnelVisionLabs.ReferenceAssemblyAnnotator.AnnotatorBuildTask" AssemblyFile="$(ReferenceAssemblyAnnotatorBuildTaskPath)TunnelVisionLabs.ReferenceAssemblyAnnotator.dll" />

  <PropertyGroup Condition="
                   ('$(TargetFrameworkIdentifier)' == '.NETStandard' AND $([System.Version]::Parse($(TargetFrameworkVersion.Substring(1)))) &gt;= $([System.Version]::Parse('2.1')))
                   OR ('$(TargetFrameworkIdentifier)' == '.NETCoreApp' AND $([System.Version]::Parse($(TargetFrameworkVersion.Substring(1)))) &gt;= $([System.Version]::Parse('3.0')))">
    <TargetFrameworkIsNativelyAnnotated>true</TargetFrameworkIsNativelyAnnotated>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateNullableAttributes Condition="'$(GenerateNullableAttributes)' == ''">true</GenerateNullableAttributes>
    <NullableAttributesPath Condition="'$(NullableAttributesPath)' == ''">$(MSBuildThisFileDirectory)NullableAttributes$(DefaultLanguageSourceExtension)</NullableAttributesPath>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFrameworkIsNativelyAnnotated)' != 'true' AND '$(GenerateNullableAttributes)' == 'true' AND Exists($(NullableAttributesPath))">
    <Compile Include="$(NullableAttributesPath)" Visible="false" />

    <!-- Make sure the source file is embedded in PDB to support Source Link -->
    <EmbeddedFiles Condition="'$(DebugType)' != 'none'" Include="$(NullableAttributesPath)" />
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFrameworkIsNativelyAnnotated)' != 'true'">
    <ResolveAssemblyReferencesDependsOn>
      $(ResolveAssemblyReferencesDependsOn);
      AnnotateReferenceAssemblies;
      UpdateNetStandardAssemblies
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <AnnotatedReferenceAssemblyDirectory Condition="'$(AnnotatedReferenceAssemblyDirectory)' == ''">$(NuGetPackageRoot)\microsoft.netcore.app.ref\$(AnnotatedReferenceAssemblyVersion)\ref\netcoreapp3.0\</AnnotatedReferenceAssemblyDirectory>
  </PropertyGroup>

  <ItemGroup>
    <AnnotatedReferenceAssembly Include="$(AnnotatedReferenceAssemblyDirectory)*.dll" />
  </ItemGroup>

  <Target Name="ResolveAvailableReferenceAssemblies"
          DependsOnTargets="GetReferenceAssemblyPaths">
    <ItemGroup>
      <AvailableUnannotatedReferenceAssemblyDirectory Include="$(TargetFrameworkDirectory)" />
      <!-- Use an intermediate item group so AvailableUnannotatedReferenceAssembly contains the expanded glob -->
      <_AvailableUnannotatedReferenceAssembly Include="@(AvailableUnannotatedReferenceAssemblyDirectory->'%(Identity)*.dll')" />
      <AvailableUnannotatedReferenceAssembly Include="@(_AvailableUnannotatedReferenceAssemblyDirectory)" />
    </ItemGroup>
  </Target>

  <Target Name="ResolveOutputReferenceAssemblies">
    <PropertyGroup>
      <AnnotatedReferenceAssemblyOutputPath Condition="'$(AnnotatedReferenceAssemblyOutputPath)' == ''">$(IntermediateOutputPath)annotated\</AnnotatedReferenceAssemblyOutputPath>
    </PropertyGroup>
    <ItemGroup>
      <UnannotatedReferenceAssembly Update="@(UnannotatedReferenceAssembly)" OutputAssembly="$(AnnotatedReferenceAssemblyOutputPath)%(Identity).dll" />
    </ItemGroup>
  </Target>

  <Target Name="AnnotateReferenceAssemblies"
          DependsOnTargets="$(AnnotateReferenceAssembliesDependsOn)"
          Inputs="@(AvailableUnannotatedReferenceAssembly);@(AnnotatedReferenceAssembly)"
          Outputs="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')">

    <Error Condition="'$(AnnotatedReferenceAssemblyVersion)' == ''" Text="The 'AnnotatedReferenceAssemblyVersion' build property was not set." Code="RA0000" />

    <AnnotatorBuildTask
      UnannotatedReferenceAssembly="%(UnannotatedReferenceAssembly.Identity)"
      TargetFrameworkDirectories="@(AvailableUnannotatedReferenceAssemblyDirectory)"
      AnnotatedReferenceAssemblyDirectory="$(AnnotatedReferenceAssemblyDirectory)"
      OutputPath="$(AnnotatedReferenceAssemblyOutputPath)"
      DisabledWarnings="$(NoWarn)">
      <Output ItemName="GeneratedReferenceAssemblies" TaskParameter="GeneratedAssemblies" />
    </AnnotatorBuildTask>

    <ItemGroup>
      <FileWrites Include="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')" />
    </ItemGroup>

    <PropertyGroup>
      <!-- Add the annotated assembly directory as the first search path -->
      <TargetFrameworkDirectory>$([MSBuild]::NormalizeDirectory('$(AnnotatedReferenceAssemblyOutputPath)'));$(TargetFrameworkDirectory)</TargetFrameworkDirectory>
    </PropertyGroup>
  </Target>

  <Target Name="RestoreTargetFrameworkDirectory"
          Condition="'$(TargetFrameworkIdentifier)' == '.NETStandard' OR '$(TargetFrameworkIdentifier)' == '.NETCoreApp'"
          BeforeTargets="ResolveAvailableReferenceAssemblies">
    <ItemGroup Condition="'$(NETStandardLibraryPackageVersion)' == ''">
      <!-- .NET Standard 1.x -->
      <_NetStandardReferences Include="@(Reference)"
                              Condition="
                                '%(NuGetPackageId)' == 'Microsoft.Win32.Primitives'
                                OR '%(NuGetPackageId)' == 'XXXSystem.AppContext'
                                OR '%(NuGetPackageId)' == 'System.Collections'
                                OR '%(NuGetPackageId)' == 'System.Collections.Concurrent'
                                OR '%(NuGetPackageId)' == 'XXXSystem.Console'
                                OR '%(NuGetPackageId)' == 'System.Diagnostics.Debug'
                                OR '%(NuGetPackageId)' == 'System.Diagnostics.Tools'
                                OR '%(NuGetPackageId)' == 'System.Diagnostics.Tracing'
                                OR '%(NuGetPackageId)' == 'System.Globalization'
                                OR '%(NuGetPackageId)' == 'System.Globalization.Calendars'
                                OR '%(NuGetPackageId)' == 'System.IO'
                                OR '%(NuGetPackageId)' == 'System.IO.Compression'
                                OR '%(NuGetPackageId)' == 'System.IO.Compression.ZipFile'
                                OR '%(NuGetPackageId)' == 'XXXSystem.IO.FileSystem'
                                OR '%(NuGetPackageId)' == 'XXXSystem.IO.FileSystem.Primitives'
                                OR '%(NuGetPackageId)' == 'System.Linq'
                                OR '%(NuGetPackageId)' == 'System.Linq.Expressions'
                                OR '%(NuGetPackageId)' == 'System.Net.Http'
                                OR '%(NuGetPackageId)' == 'System.Net.Primitives'
                                OR '%(NuGetPackageId)' == 'System.Net.Sockets'
                                OR '%(NuGetPackageId)' == 'System.ObjectModel'
                                OR '%(NuGetPackageId)' == 'System.Reflection'
                                OR '%(NuGetPackageId)' == 'System.Reflection.Extensions'
                                OR '%(NuGetPackageId)' == 'System.Reflection.Primitives'
                                OR '%(NuGetPackageId)' == 'System.Resources.ResourceManager'
                                OR '%(NuGetPackageId)' == 'System.Runtime'
                                OR '%(NuGetPackageId)' == 'System.Runtime.Extensions'
                                OR '%(NuGetPackageId)' == 'System.Runtime.Handles'
                                OR '%(NuGetPackageId)' == 'System.Runtime.InteropServices'
                                OR '%(NuGetPackageId)' == 'System.Runtime.InteropServices.RuntimeInformation'
                                OR '%(NuGetPackageId)' == 'System.Runtime.Numerics'
                                OR '%(NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Algorithms'
                                OR '%(NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Encoding'
                                OR '%(NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Primitives'
                                OR '%(NuGetPackageId)' == 'XXXSystem.Security.Cryptography.X509Certificates'
                                OR '%(NuGetPackageId)' == 'System.Text.Encoding'
                                OR '%(NuGetPackageId)' == 'System.Text.Encoding.Extensions'
                                OR '%(NuGetPackageId)' == 'System.Text.RegularExpressions'
                                OR '%(NuGetPackageId)' == 'System.Threading'
                                OR '%(NuGetPackageId)' == 'System.Threading.Tasks'
                                OR '%(NuGetPackageId)' == 'System.Threading.Timer'
                                OR '%(NuGetPackageId)' == 'System.Xml.ReaderWriter'
                                OR '%(NuGetPackageId)' == 'System.Xml.XDocument'" />
      <_NetStandardNuGetPackageFoldersNoSlash Include="$([System.IO.Path]::GetDirectoryName('%(_NetStandardReferences.Identity)'))" />
      <_NetStandardNuGetPackageFolders Include="$([MSBuild]::NormalizeDirectory('%(_NetStandardNuGetPackageFoldersNoSlash.Identity)'))" />
    </ItemGroup>

    <ItemGroup Condition="'$(NETStandardLibraryPackageVersion)' != ''">
      <!-- .NET Standard 2+ -->
      <_NuGetPackageFoldersItems Include="$(NuGetPackageFolders)" />
      <_NetStandardNuGetPackageFolders Include="$([MSBuild]::NormalizeDirectory('%(_NuGetPackageFoldersItems.Identity)', 'netstandard.library', '$(NETStandardLibraryPackageVersion)', 'build', 'netstandard2.0', 'ref'))" />
    </ItemGroup>

    <PropertyGroup>
      <TargetFrameworkDirectory>@(_NetStandardNuGetPackageFolders)</TargetFrameworkDirectory>
    </PropertyGroup>
  </Target>

  <!-- Automatically annotate mscorlib on .NET Framework -->
  <Choose>
    <When Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
      <PropertyGroup>
        <NoStdLib>true</NoStdLib>
      </PropertyGroup>

      <ItemGroup>
        <Reference Include="mscorlib" />
      </ItemGroup>

      <ItemGroup>
        <UnannotatedReferenceAssembly Include="mscorlib" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- Automatically annotate .NET Standard assemblies -->
  <Target Name="AddStandardAssembliesForAnnotation"
          BeforeTargets="ResolveOutputReferenceAssemblies">
    <ItemGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
      <UnannotatedReferenceAssembly Include="%(Reference.Identity)"
                                    Condition="Exists('$(AnnotatedReferenceAssemblyDirectory)%(Reference.Identity).dll')
                                      AND ('%(Reference.Identity)' == 'System'
                                        OR '%(Reference.Identity)' == 'System.Core'
                                        OR '%(Reference.Identity)' == 'System.Data'
                                        OR '%(Reference.Identity)' == 'System.Drawing'
                                        OR '%(Reference.Identity)' == 'System.IO.Compression.FileSystem'
                                        OR '%(Reference.Identity)' == 'System.Numerics'
                                        OR '%(Reference.Identity)' == 'System.Runtime.Serialization'
                                        OR '%(Reference.Identity)' == 'System.Xml'
                                        OR '%(Reference.Identity)' == 'System.Xml.Linq')" />
    </ItemGroup>

    <ItemGroup Condition="'$(NETStandardLibraryPackageVersion)' == ''">
      <!-- .NET Standard 1.x -->
      <UnannotatedReferenceAssembly Include="@(Reference->'%(FileName)')"
                                    Condition="Exists('$(AnnotatedReferenceAssemblyDirectory)%(Reference.FileName)%(Reference.Extension)')
                                      AND ('%(Reference.NuGetPackageId)' == 'Microsoft.Win32.Primitives'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.AppContext'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Collections'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Collections.Concurrent'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.Console'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Diagnostics.Debug'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Diagnostics.Tools'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Diagnostics.Tracing'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Globalization'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Globalization.Calendars'
                                        OR '%(Reference.NuGetPackageId)' == 'System.IO'
                                        OR '%(Reference.NuGetPackageId)' == 'System.IO.Compression'
                                        OR '%(Reference.NuGetPackageId)' == 'System.IO.Compression.ZipFile'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.IO.FileSystem'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.IO.FileSystem.Primitives'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Linq'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Linq.Expressions'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Net.Http'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Net.Primitives'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Net.Sockets'
                                        OR '%(Reference.NuGetPackageId)' == 'System.ObjectModel'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Reflection'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Reflection.Extensions'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Reflection.Primitives'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Resources.ResourceManager'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime.Extensions'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime.Handles'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime.InteropServices'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime.InteropServices.RuntimeInformation'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Runtime.Numerics'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Algorithms'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Encoding'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.Security.Cryptography.Primitives'
                                        OR '%(Reference.NuGetPackageId)' == 'XXXSystem.Security.Cryptography.X509Certificates'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Text.Encoding'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Text.Encoding.Extensions'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Text.RegularExpressions'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Threading'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Threading.Tasks'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Threading.Timer'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Xml.ReaderWriter'
                                        OR '%(Reference.NuGetPackageId)' == 'System.Xml.XDocument')"
                                    OriginalReference="%(Reference.Identity)"
                                    IsNetStandard="True" />
    </ItemGroup>

    <ItemGroup Condition="'$(NETStandardLibraryPackageVersion)' != ''">
      <!-- .NET Standard 2+ -->
      <UnannotatedReferenceAssembly Include="@(Reference->'%(FileName)')"
                                    Condition="'%(Reference.NuGetPackageId)' == 'NETStandard.Library' AND Exists('$(AnnotatedReferenceAssemblyDirectory)%(Reference.FileName)%(Reference.Extension)')"
                                    OriginalReference="%(Reference.Identity)"
                                    IsNetStandard="True" />
    </ItemGroup>
  </Target>

  <Target Name="UpdateNetStandardAssemblies"
          Condition="'$(TargetFrameworkIdentifier)' == '.NETStandard' OR '$(TargetFrameworkIdentifier)' == '.NETCoreApp'"
          DependsOnTargets="AnnotateReferenceAssemblies">
    <ItemGroup>
      <Reference Remove="%(UnannotatedReferenceAssembly.OriginalReference)"
                 Condition="'%(UnannotatedReferenceAssembly.IsNetStandard)' == 'True' AND Exists('%(UnannotatedReferenceAssembly.OutputAssembly)')" />
      <Reference Include="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')"
                 Condition="'%(UnannotatedReferenceAssembly.IsNetStandard)' == 'True' AND Exists('%(UnannotatedReferenceAssembly.OutputAssembly)')"
                 HintPath="" />
    </ItemGroup>
  </Target>

</Project>
